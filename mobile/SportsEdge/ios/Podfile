# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'SportsEdge' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  
  # Firebase
  pod 'Firebase/Core'
  pod 'Firebase/Crashlytics'
  pod 'Firebase/Analytics'
  pod 'Firebase/Messaging'
  
  # Biometric authentication
  pod 'LocalAuthentication'
  
  # Network and security
  pod 'AFNetworking', '~> 4.0'
  
  # Development pods for debug builds
  if ENV['DEBUG']
    pod 'Flipper', :configurations => ['Debug']
    pod 'Flipper-Folly', :configurations => ['Debug']
    pod 'Flipper-RSocket', :configurations => ['Debug']
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Fix for Firebase and other compatibility issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Fix for Xcode 15 compatibility
        if config.build_settings['WRAPPER_EXTENSION'] == 'bundle'
          config.build_settings['DEVELOPMENT_TEAM'] = 'YourDevelopmentTeamID'
        end
      end
    end
  end
end
